name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore .NET dependencies
      run: dotnet restore ./backend

    - name: Build .NET project
      run: dotnet build ./backend --no-restore

    - name: Test .NET project
      run: dotnet test ./backend --no-build

    - name: Publish .NET project
      run: dotnet publish ./backend --configuration Release --output ./backend/publish

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy .NET project to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: '<your-dotnet-app-name>'
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: './backend/publish'

  build-and-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'

    - name: Install dependencies
      run: npm install
      working-directory: ./frontend

    - name: Build frontend
      run: npm run build
      working-directory: ./frontend

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy frontend to Azure
      uses: azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        app_location: './frontend'
        output_location: './frontend/build'

env:
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
